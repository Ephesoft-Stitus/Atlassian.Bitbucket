jobs:
  - job: Build_PS_Win2016
    pool:
      vmImage: vs2017-win2016
    steps:
    - powershell: |
        .\Build.ps1
      displayName: 'Test'

    - task: PublishTestResults@2
      displayName: 'Publish Test Results'
      condition: always()
      inputs:
        testRunner: 'NUnit'
        testResultsFiles: '**/TestResults.xml'
        testRunTitle: 'PS_Win2016'

    - task: ArchiveFiles@2
      displayName: 'Archive Build'
      inputs:
        rootFolderOrFile: Build
        includeRootFolder: false
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

  - job: Build_PSCore_Ubuntu1604
    pool:
      vmImage: ubuntu-16.04
    steps: 
    - script: |
        pwsh -c '.\Build.ps1'
      displayName: 'Test'
 
    - task: PublishTestResults@2
      inputs:
        testRunner: 'NUnit'
        testResultsFiles: '**/TestResults.xml'
        testRunTitle: 'PSCore_Ubuntu1604'
      condition: always()
      displayName: 'Publish Test Results'
 
  - job: Build_PSCore_MacOS1013
    pool:
      vmImage: xcode9-macos10.13
    steps: 
    - script: |
        pwsh -c '.\Build.ps1'
      displayName: 'Test'
 
    - task: PublishTestResults@2
      inputs:
        testRunner: 'NUnit'
        testResultsFiles: '**/TestResults.xml'
        testRunTitle: 'PSCore_MacOS1013'
      condition: always()
      displayName: 'Publish Test Results'